_exclude:
  - "*"
  - "!*/"
  - ".git"
  - "/tests"

_external_data:
  secrets: .secrets.yaml
  defaults: defaults.yaml

_message_before_copy: |
  ðŸš€ Welcome to Django Core Template!

  This template will create a full-featured Django application with:
  - Django REST Framework/Django Ninja (optional)
  - PostgreSQL/MYSQL support (optional)
  - Ruff for linting (optional)
  - Ready-to-use project structure

  Make sure you have Python 3.12+ installed before starting.

project_name:
  type: str
  help: "What is the name of your project?"
  default: Django Core Project

project_slug:
  type: str
  default: "{{ project_name | lower | replace(' ', '_') }}"

project_version:
  type: str
  help: "What is the version of your project?"
  default: "0.1.0"

project_description:
  type: str
  help: "What is the description of your project?"
  default: "Add your description here"

python_version:
  type: str
  help: "What Python version do you want to use?"
  default: "3.12"

author_name:
  default: "{{ _external_data.defaults.author_name | default('default_author_name') }}"

author_username:
  default: "{{ author_name | lower | replace(' ', '') }}"

author_email:
  default: "{{ _external_data.defaults.author_email | default('default_author_email') }}"

api_framework:
  type: str
  help: "Which API framework do you want to use?"
  choices:
    - ninja
    - drf
  default: "{{ _external_data.defaults.api_framework | default('ninja') }}"

linter:
  type: str
  help: "Which linter do you want to use?"
  choices:
    - ruff
    - flake8
  default: ruff
  default: "{{ _external_data.defaults.linter | default('ruff') }}"

database:
  type: str
  help: "Which database do you want to use?"
  choices:
    - postgresql
    - mysql
  default: "{{ _external_data.defaults.database | default('postgresql') }}"

postgres_password:
  type: str
  secret: true
  when: "{{ database == 'postgresql' }}"
  help: "Which postgres password do you want to use?"
  default: "{{ _external_data.secrets.psql_password | default('postgresqlpass') }}"

mysql_password:
  type: str
  secret: true
  when: "{{ database == 'mysql' }}"
  help: "Which mysql password do you want to use?"
  default: "{{ _external_data.secrets.mysql_password | default('mysqlpass') }}"

mysql_root_password:
  type: str
  secret: true
  when: "{{ database == 'mysql' }}"
  help: "Which mysql root password do you want to use?"
  default: "{{ _external_data.secrets.mysql_root_password | default('mysqlrootpass') }}"

_message_after_copy: |
    Your project "{{ project_name }}" has been created successfully!

_tasks:
  - command: "mv {{ project_slug }}/.env.example {{ project_slug }}/.env"
    when: "{{ _copier_operation == 'copy' }}"
  - command: "git init && git add . && git commit -m '{{ project_name }} initialization commit'"
    when: "{{ _copier_operation == 'copy' }}"
    working_directory: "{{ project_slug }}"
  - command: "uv sync && uv sync --extra dev"
    when: "{{ _copier_operation == 'copy' }}"
    working_directory: "{{ project_slug }}"
  - command: "uv run pre-commit install && uv run pre-commit autoupdate"
    when: "{{ _copier_operation == 'copy' }}"
    working_directory: "{{ project_slug }}"
  - command: "uv run pre-commit run --all-files --show-diff-on-failure"
    when: "{{ _copier_operation == 'copy' }}"
    working_directory: "{{ project_slug }}"
