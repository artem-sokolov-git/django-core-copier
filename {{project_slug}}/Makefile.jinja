include .env
export

BLUE = \033[1;34m
GREEN = \033[1;32m
YELLOW = \033[1;33m
CYAN = \033[36m
RESET = \033[0m

define print_separator
	@printf '%*s\n' "$$(tput cols)" '' | tr ' ' '‚ïê'
endef

define start_task
	@echo ""
	$(call print_separator)
	@echo "$(BLUE)$(1)$(RESET)"
	$(call print_separator)
endef

define end_task
	@echo ""
	@echo "$(GREEN)$(1)$(RESET)"
	@echo ""
endef

COMPOSE_FILE = docker-compose.yaml
{%- if database == "postgresql" %}
STORAGE_CON = {{project_slug}}_psql
AUTH = psql -U $$POSTGRES_USER -d $$POSTGRES_DB
{%- else %}
STORAGE_CON = {{project_slug}}_mysql
AUTH = mysql -u $$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE
{%- endif %}
DC = docker compose -f $(COMPOSE_FILE)
WEB_CON = {{project_slug}}_web
MANAGE = uv run python manage.py
PRECOMMIT = uv run pre-commit

.PHONY: generate-secrets
generate-secrets:
	$(call start_task,Generating SECRET_KEY...)
	uv run python scripts/generate_secrets.py

.PHONY: pre-commit-check
pre-commit-check:
	$(call start_task,Running pre-commit hooks...)
	$(PRECOMMIT) run --all-files --show-diff-on-failure

.PHONY: build-app
build-app:
	$(call start_task,Building application containers...)
	$(DC) build

.PHONY: up
up:
	$(call start_task,Starting all containers...)
	$(DC) up -d

.PHONY: logs
logs:
	$(call start_task,Viewing application logs...)
	$(DC) logs -f

.PHONY: migrate
migrate:
	$(call start_task,Running database migrations...)
	$(DC) exec $(WEB_CON) $(MANAGE) migrate

.PHONY: clean-db
clean-db:
	$(call start_task,Cleaning database volumes...)
	$(DC) down -v
	docker volume prune -f

.PHONY: dj-shell
dj-shell:
	$(call start_task,Enter to django shell...)
	$(DC) exec $(WEB_CON) $(MANAGE) shell -v 2

.PHONY: db-shell
db-shell:
	$(call start_task,Connecting to database shell...)
	$(DC) exec $(STORAGE_CON) $(AUTH)

.PHONY: test
test:
	$(call start_task,Running tests in container...)
	$(DC) exec $(WEB_CON) uv run pytest

.PHONY: mypy
mypy:
	$(call start_task,Running mypy type checks in container...)
	$(DC) exec $(WEB_CON) uv run mypy .

.PHONY: rebuild
rebuild: clean-db generate-secrets build-app up migrate mypy test
	$(call end_task,Project rebuilt successfully!)

.PHONY: project
project: generate-secrets build-app up migrate mypy test
	$(call end_task,Project built successfully!)
