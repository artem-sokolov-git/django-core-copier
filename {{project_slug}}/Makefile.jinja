include .env
export

BLUE = \033[1;34m
GREEN = \033[1;32m
YELLOW = \033[1;33m
CYAN = \033[36m
RESET = \033[0m

define print_separator
	@printf '%*s\n' "$$(tput cols)" '' | tr ' ' '‚ïê'
endef

define start_task
	@echo ""
	$(call print_separator)
	@echo "$(BLUE)$(1)$(RESET)"
	$(call print_separator)
endef

define end_task
	@echo ""
	@echo "$(GREEN)$(1)$(RESET)"
	@echo ""
endef

STORAGES = docker/{{project_slug}}/storages.yaml
APPS = docker/{{project_slug}}/apps.yaml
{%- if database == "postgresql" %}
STORAGE_CON = {{project_slug}}_psql
{%- else %}
STORAGE_CON = {{project_slug}}_mysql
{%- endif %}
DC = docker compose
WEB_CON = {{project_slug}}_web
MANAGE = uv run python manage.py
PRECOMMIT = uv run pre-commit

.PHONY: pre-commit-check
pre-commit-check:
	$(call start_task,Running pre-commit hooks...)
	$(PRECOMMIT) run --all-files --show-diff-on-failure
	$(call end_task,Pre-commit checks completed!)

.PHONY: build-app
build-app:
	$(call start_task,Building application containers...)
	$(DC) -f $(APPS) build
	$(call end_task,Application built!)

.PHONY: up-app
up-app:
	$(call start_task,Starting application containers...)
	$(DC) -f $(APPS) up -d
	$(call end_task,Application started!)

.PHONY: up-storages
up-storages:
	$(call start_task,Starting storage containers...)
	$(DC) -f $(STORAGES) up -d --remove-orphans
	$(call end_task,Storage services started!)

.PHONY: logs
logs:
	$(call start_task,Viewing application logs...)
	$(DC) -f $(APPS) logs -f

.PHONY: migrate
migrate:
	$(call start_task,Running database migrations...)
	$(DC) -f $(APPS) exec $(WEB_CON) $(MANAGE) migrate
	$(call end_task,Database migrations completed!)

.PHONY: clean-db
clean-db:
	$(call start_task,Cleaning database volumes...)
	$(DC) -f $(APPS) down
	$(DC) -f $(STORAGES) down -v
	docker volume prune -f
	$(call end_task,Database volumes cleaned!)

.PHONY: dj-shell
dj-shell:
	$(call start_task,Enter to django shell...)
	$(DC) -f $(APPS) exec $(WEB_CON) $(MANAGE) shell -v 2

.PHONY: test
test:
	$(call start_task,Running tests in container...)
	$(DC) -f $(APPS) exec $(WEB_CON) uv run pytest
	$(call end_task,Tests completed!)

.PHONY: mypy
mypy:
	$(call start_task,Running mypy type checks in container...)
	$(DC) -f $(APPS) exec $(WEB_CON) uv run mypy .
	$(call end_task,MyPy type checks completed!)

.PHONY: rebuild
rebuild: clean-db build-app up-storages up-app migrate mypy test
	$(call end_task,Project rebuilt successfully!)

.PHONY: project
project: build-app up-storages up-app migrate mypy test
	$(call end_task,Project built successfully!)
